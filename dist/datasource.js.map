{"version":3,"sources":["../src/datasource.js"],"names":["_","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","name","quandl_api_key","jsonData","q","t","Promise","resolve","setTimeout","options","retryInterval","datasourceRequest","url","method","headers","then","resp","status","ts","data","dataset","ind","column_names","indexOf","key","datapoints","map","parseFloat","tup","Date","getTime","reverse","obj","target","tick","catch","that","delay","getTimeSeries","start","range","from","end","to","targets","filter","hide","proms","db","code","format","all","console","log","err","response","message","title","codes","databases","text","ds","value","database_code","ret","mapToTextValue","result","d","i","isObject"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.name = instanceSettings.name;\n    this.quandl_api_key = instanceSettings.jsonData.quandl_api_key;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n  }\n\n  delay(t) {\n    return new Promise(function(resolve) { \n      setTimeout(resolve, t)\n    });\n  }\n\n  getTimeSeries(options, retryInterval) {\n    return this.backendSrv.datasourceRequest({\n      url: options.url,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET,POST,PUT,DELETE,OPTIONS',\n        'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept'\n      }\n    }).then(resp => {\n      if (resp.status === 200) {\n        var ts = resp.data.dataset.data;\n        var ind = resp.data.dataset.column_names.indexOf(options.key);\n        if(ind == -1){\n          ind = 1;\n        }\n\n        var datapoints = _.map(ts, tup => {\n            return [parseFloat(tup[ind]), new Date(tup[0]).getTime()]\n        }).reverse();\n\n        var obj = {\n            target: options.tick,\n            datapoints: datapoints\n        }\n\n        return obj;\n      }\n      return null;\n    }).catch(err => {\n        var that = this;\n        return this.delay(retryInterval).then(function(){\n            return that.getTimeSeries(options, retryInterval * 2);\n        })\n    });\n  }\n\n  query(options) {\n    var start = options.range.from;\n    var end = options.range.to;\n\n    options.targets = options.targets.filter(t => !t.hide);\n\n    var proms = _.map(options.targets, target => {\n        var tick = target.db + '/' + target.code;\n\n        var url = 'https://www.quandl.com/api/v3/datasets/' + tick + '.json?';\n        var key = target.key;\n\n        url = url + 'start_date=' + start.format('YYYY-MM-DD');\n        url = url + '&end_date=' + end.format('YYYY-MM-DD');\n        url = url + '&api_key=' + this.quandl_api_key;\n\n        return this.getTimeSeries({url: url, tick: tick, key: key}, 500);\n    });\n    return Promise.all(proms)\n        .then(data => {\n            return {data: data}\n        })\n        .catch(err => console.log('Catch', err));\n  }\n\n\n  testDatasource() {\n    var url = 'https://www.quandl.com/api/v3/databases/codes.json?'\n    url = url + 'api_key=' + this.quandl_api_key;\n\n    return this.backendSrv.datasourceRequest({\n      url: url,\n      method: 'GET'\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n  metricFindQuery(options) {\n\n    var url = 'https://www.quandl.com/api/v3/databases/codes.json?'\n    url = url + 'api_key=' + this.quandl_api_key;\n\n    return this.backendSrv.datasourceRequest({\n      url: url,\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    }).then(resp => {\n        var codes = _.map(resp.data.databases, ds => {\n            return {text: ds.name,value: ds.database_code};\n        });\n        var ret = this.mapToTextValue(codes);\n        return ret;\n    });\n  }\n\n  mapToTextValue(result) {\n    return _.map(result, (d, i) => {\n      if (d && d.text && d.value) {\n        return { text: d.text, value: d.value };\n      } else if (_.isObject(d)) {\n        return { text: d, value: i};\n      }\n      return { text: d, value: d };\n    });\n  }\n}\n"]}