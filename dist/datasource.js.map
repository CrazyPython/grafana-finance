{"version":3,"sources":["../src/datasource.js"],"names":["_","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","console","log","type","name","quandl_api_key","jsonData","q","t","Promise","resolve","setTimeout","options","retryInterval","datasourceRequest","url","method","headers","then","resp","status","ts","data","dataset","datapoints","map","parseFloat","tup","Date","getTime","reverse","obj","target","tick","catch","that","delay","getTimeSeries","start","range","from","end","to","targets","filter","hide","proms","db","code","format","all","err","response","message","title","annotation","text","tags","codes","databases","ds","value","database_code","ret","mapToTextValue","result","d","i","isObject"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    console.log(instanceSettings);\n    this.type = instanceSettings.type;\n    this.name = instanceSettings.name;\n    this.quandl_api_key = instanceSettings.jsonData.quandl_api_key;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n  }\n\n    delay(t) {\n       return new Promise(function(resolve) { \n           setTimeout(resolve, t)\n       });\n    }\n\n  getTimeSeries(options, retryInterval) {\n    return this.backendSrv.datasourceRequest({\n          url: options.url,\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,POST,PUT,DELETE,OPTIONS',\n            'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept'\n          }\n        }).then(resp => {\n            if (resp.status === 200) {\n                var ts = resp.data.dataset.data;\n                var datapoints = _.map(ts, tup => {\n                    return [parseFloat(tup[1]), new Date(tup[0]).getTime()]\n                }).reverse();\n\n                var obj = {\n                    target: options.tick,\n                    datapoints: datapoints\n                }\n\n                return obj;\n            }\n            return null;\n        }).catch(err => {\n            var that = this;\n            return this.delay(retryInterval).then(function(){\n                return that.getTimeSeries(options, retryInterval * 2);\n            })\n        });\n  }\n\n  query(options) {\n    var start = options.range.from;\n    var end = options.range.to;\n\n    options.targets = options.targets.filter(t => !t.hide);\n\n    var proms = _.map(options.targets, target => {\n        var tick = target.db + '/' + target.code;\n\n        var url = 'https://www.quandl.com/api/v3/datasets/' + tick + '.json?';\n\n        url = url + 'start_date=' + start.format('YYYY-MM-DD');\n        url = url + '&end_date=' + end.format('YYYY-MM-DD');\n        url = url + '&api_key=' + this.quandl_api_key;\n\n        return this.getTimeSeries({url: url, tick: tick}, 500);\n\n        \n    });\n    return Promise.all(proms)\n        .then(data => {\n            console.log(data);\n            return {data: data}\n        })\n        .catch(err => console.log('Catch', err));\n    }\n\n\n  testDatasource() {\n    var url = 'https://www.quandl.com/api/v3/databases/codes.json?'\n    url = url + 'api_key=' + this.quandl_api_key;\n\n    return this.backendSrv.datasourceRequest({\n      url: url,\n      method: 'GET'\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n  annotationQuery(options) {\n    return [\n        { annotation: options.annotation, \"title\": \"Donlad trump is kinda funny\", \"time\": 1450754160000, text: \"teeext\", tags: \"taaags\" },\n    ]\n  }\n\n  metricFindQuery(options) {\n\n    var url = 'https://www.quandl.com/api/v3/databases/codes.json?'\n    url = url + 'api_key=' + this.quandl_api_key;\n\n    return this.backendSrv.datasourceRequest({\n      url: url,\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    }).then(resp => {\n        var codes = _.map(resp.data.databases, ds => {\n            return {text: ds.name,value: ds.database_code};\n        });\n        var ret = this.mapToTextValue(codes);\n        return ret;\n    });\n  }\n\n  mapToTextValue(result) {\n    return _.map(result, (d, i) => {\n      if (d && d.text && d.value) {\n        return { text: d.text, value: d.value };\n      } else if (_.isObject(d)) {\n        return { text: d, value: i};\n      }\n      return { text: d, value: d };\n    });\n  }\n\n\n}"]}